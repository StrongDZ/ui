{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/admin/hackathonstarknet/ui/src/app/components/wallet.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Connector, useConnect } from \"@starknet-react/core\";\r\nimport { StarknetkitConnector, useStarknetkitConnectModal } from \"starknetkit\";\r\n\r\nconst buttonStyles =\r\n  \"w-auto px-8 py-3 bg-gray-800 text-white rounded-xl font-medium hover:bg-gray-700 transition-colors float-right\";\r\n\r\nimport React from \"react\";\r\n\r\nexport function WalletConnectorModal() {\r\n  const { connect, connectors } = useConnect();\r\n\r\n  const { starknetkitConnectModal } = useStarknetkitConnectModal({\r\n    connectors: connectors as StarknetkitConnector[],\r\n  });\r\n\r\n  async function connectWallet() {\r\n    const { connector } = await starknetkitConnectModal();\r\n    if (!connector) {\r\n      return;\r\n    }\r\n    await connect({ connector: connector as Connector });\r\n  }\r\n\r\n  return (\r\n    <button onClick={connectWallet} className={buttonStyles}>\r\n      Connect Wallet\r\n    </button>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,eACJ;AAIK,SAAS;IACd,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,4JAAA,CAAA,aAAU,AAAD;IAEzC,MAAM,EAAE,uBAAuB,EAAE,GAAG,CAAA,GAAA,kJAAA,CAAA,6BAA0B,AAAD,EAAE;QAC7D,YAAY;IACd;IAEA,eAAe;QACb,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM;QAC5B,IAAI,CAAC,WAAW;YACd;QACF;QACA,MAAM,QAAQ;YAAE,WAAW;QAAuB;IACpD;IAEA,qBACE,8OAAC;QAAO,SAAS;QAAe,WAAW;kBAAc;;;;;;AAI7D","debugId":null}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/admin/hackathonstarknet/ui/src/app/utils/getShortAddress.ts"],"sourcesContent":["export function getShortAddress(\r\n  address: string,\r\n  startChars: number = 6,\r\n  endChars: number = 4\r\n): string {\r\n  if (!address) {\r\n    return \"\";\r\n  }\r\n\r\n  if (address.length <= startChars + endChars) {\r\n    return address;\r\n  }\r\n\r\n  return `${address.slice(0, startChars)}...${address.slice(-endChars)}`;\r\n}\r\n"],"names":[],"mappings":";;;AAAO,SAAS,gBACd,OAAe,EACf,aAAqB,CAAC,EACtB,WAAmB,CAAC;IAEpB,IAAI,CAAC,SAAS;QACZ,OAAO;IACT;IAEA,IAAI,QAAQ,MAAM,IAAI,aAAa,UAAU;QAC3C,OAAO;IACT;IAEA,OAAO,GAAG,QAAQ,KAAK,CAAC,GAAG,YAAY,GAAG,EAAE,QAAQ,KAAK,CAAC,CAAC,WAAW;AACxE","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/admin/hackathonstarknet/ui/src/app/components/balance.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { Skeleton } from \"@heroui/react\";\r\nimport { useBalance } from \"@starknet-react/core\";\r\n\r\ninterface GetBalanceProps {\r\n  address?: string | null;\r\n}\r\n\r\nexport default function Balance({ address }: GetBalanceProps) {\r\n  const { data, isLoading, isError, error } = useBalance({\r\n    address: (address as `0x${string}`) || undefined,\r\n  });\r\n\r\n  if (isError)\r\n    return (\r\n      <div className=\"flex items-center gap-2 text-red-500 text-sm\">\r\n        Error fetching balance\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"text-gray-600 text-sm mb-2\">Balance</div>\r\n      <div className=\"text-2xl font-semibold flex items-center justify-center mb-4\">\r\n        {isLoading ? (\r\n          <Skeleton className=\"w-24 h-6\" />\r\n        ) : (\r\n          <div className=\"flex items-center gap-2\">\r\n            {data?.formatted || \"0.00\"}\r\n            <div>{data?.symbol || \"ETH\"}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AASe,SAAS,QAAQ,EAAE,OAAO,EAAmB;IAC1D,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4JAAA,CAAA,aAAU,AAAD,EAAE;QACrD,SAAS,AAAC,WAA6B;IACzC;IAEA,IAAI,SACF,qBACE,8OAAC;QAAI,WAAU;kBAA+C;;;;;;IAKlE,qBACE;;0BACE,8OAAC;gBAAI,WAAU;0BAA6B;;;;;;0BAC5C,8OAAC;gBAAI,WAAU;0BACZ,0BACC,8OAAC,kNAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;yCAEpB,8OAAC;oBAAI,WAAU;;wBACZ,MAAM,aAAa;sCACpB,8OAAC;sCAAK,MAAM,UAAU;;;;;;;;;;;;;;;;;;;AAMlC","debugId":null}},
    {"offset": {"line": 137, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/admin/hackathonstarknet/ui/src/app/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport { Copy, LogOut } from \"lucide-react\";\r\nimport { useAccount, useDisconnect, useNetwork } from \"@starknet-react/core\";\r\nimport { WalletConnectorModal } from \"./components/wallet\";\r\nimport { getShortAddress } from \"./utils/getShortAddress\";\r\n\r\nimport { RpcProvider, Contract, constants, num, Abi, CallData, cairo } from \"starknet\";\r\nimport Balance from \"./components/balance\";\r\nimport Link from \"next/link\";\r\n\r\ninterface DepositFormProps {\r\n  amount: string;\r\n  isLoading?: boolean;\r\n  setAmount: (amount: string) => void;\r\n  onConfirm: () => void;\r\n}\r\n\r\nfunction DepositForm({\r\n  amount,\r\n  setAmount,\r\n  onConfirm,\r\n  isLoading,\r\n}: DepositFormProps) {\r\n  const [amountError, setAmountError] = useState(\"\");\r\n  const { address } = useAccount();\r\n\r\n  const handleAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n\r\n    // Validate amount\r\n    if (value && parseFloat(value) <= 0) {\r\n      setAmountError(\"Amount must be greater than 0\");\r\n    } else if (value && isNaN(parseFloat(value))) {\r\n      setAmountError(\"Amount must be a valid number\");\r\n    } else {\r\n      setAmountError(\"\");\r\n    }\r\n\r\n    setAmount(value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    // Additional validation before confirming\r\n    if (!amount) {\r\n      setAmountError(\"Amount is required\");\r\n      return;\r\n    }\r\n    if (parseFloat(amount) <= 0) {\r\n      setAmountError(\"Amount must be greater than 0\");\r\n      return;\r\n    }\r\n    if (isNaN(parseFloat(amount))) {\r\n      setAmountError(\"Amount must be a valid number\");\r\n      return;\r\n    }\r\n\r\n    setAmountError(\"\");\r\n    onConfirm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Amount Input */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-gray-600 text-sm mb-2\">Amount</label>\r\n        <input\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={handleAmountChange}\r\n          min=\"0\"\r\n          step=\"any\"\r\n          className={`w-full py-4 px-6 text-lg border-2 rounded-xl focus:outline-none transition-colors ${amountError\r\n              ? \"border-red-500 focus:border-red-500\"\r\n              : \"border-gray-300 focus:border-blue-500\"\r\n            }`}\r\n          placeholder=\"Enter amount\"\r\n        />\r\n        {amountError && (\r\n          <p className=\"text-red-500 text-sm mt-2\">{amountError}</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Confirm Button */}\r\n      <button\r\n        onClick={handleConfirm}\r\n        disabled={!!amountError || !amount || parseFloat(amount) <= 0}\r\n        className={`w-auto px-8 py-3 rounded-xl font-medium transition-colors float-right ${amountError || !amount || parseFloat(amount) <= 0\r\n            ? \"bg-gray-400 text-gray-200 cursor-not-allowed\"\r\n            : \"bg-gray-800 text-white hover:bg-gray-700\"\r\n          }`}\r\n      >\r\n        {isLoading ? \"Confirming...\" : \"Confirm\"}\r\n      </button>\r\n      <div className=\"clear-both\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\ninterface WithdrawFormProps {\r\n  recipient: string;\r\n  setRecipient: (recipient: string) => void;\r\n  amount: string;\r\n  setAmount: (amount: string) => void;\r\n  onConfirm: () => void;\r\n}\r\n\r\nfunction WithdrawForm({\r\n  recipient,\r\n  setRecipient,\r\n  amount,\r\n  setAmount,\r\n  onConfirm,\r\n}: WithdrawFormProps) {\r\n  const { address } = useAccount();\r\n  const [recipientError, setRecipientError] = useState(\"\");\r\n\r\n  const handleRecipientChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n\r\n    // Only validate if value is not empty\r\n    if (value && !value.startsWith(\"0x\")) {\r\n      setRecipientError(\"Recipient address must start with 0x\");\r\n    } else {\r\n      setRecipientError(\"\");\r\n    }\r\n\r\n    setRecipient(value);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    // Use current user's address if recipient is empty\r\n    const finalRecipient = recipient || address;\r\n\r\n    // Only validate if recipient is provided\r\n    if (recipient && !recipient.startsWith(\"0x\")) {\r\n      setRecipientError(\"Recipient address must start with 0x\");\r\n      return;\r\n    }\r\n    if (!amount || parseFloat(amount) <= 0) {\r\n      return;\r\n    }\r\n    setRecipientError(\"\");\r\n    onConfirm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-gray-600 text-sm mb-2\">\r\n          Recipient address{\" \"}\r\n          <span className=\"text-gray-400\">\r\n            (optional - defaults to your address)\r\n          </span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={recipient}\r\n          onChange={handleRecipientChange}\r\n          className={`w-full py-4 px-6 text-lg border-2 rounded-xl focus:outline-none transition-colors ${recipientError\r\n              ? \"border-red-500 focus:border-red-500\"\r\n              : \"border-gray-300 focus:border-blue-500\"\r\n            }`}\r\n          placeholder=\"0x... (leave empty to withdraw to yourself)\"\r\n        />\r\n        {recipientError && (\r\n          <p className=\"text-red-500 text-sm mt-2\">{recipientError}</p>\r\n        )}\r\n        {!recipient && address && (\r\n          <p className=\"text-gray-500 text-sm mt-2\">\r\n            Will withdraw to: {getShortAddress(address)}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Amount Input */}\r\n      <div className=\"mb-6\">\r\n        <label className=\"block text-gray-600 text-sm mb-2\">Amount</label>\r\n        <input\r\n          type=\"number\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          className=\"w-full py-4 px-6 text-lg border-2 border-gray-300 rounded-xl focus:outline-none focus:border-blue-500 transition-colors\"\r\n          placeholder=\"Enter amount\"\r\n        />\r\n      </div>\r\n\r\n      {/* Confirm Button */}\r\n      <button\r\n        onClick={handleConfirm}\r\n        disabled={!!recipientError || !amount || parseFloat(amount) <= 0}\r\n        className={`w-auto px-8 py-3 rounded-xl font-medium transition-colors float-right ${recipientError || !amount || parseFloat(amount) <= 0\r\n            ? \"bg-gray-400 text-gray-200 cursor-not-allowed\"\r\n            : \"bg-gray-800 text-white hover:bg-gray-700\"\r\n          }`}\r\n      >\r\n        Confirm\r\n      </button>\r\n      <div className=\"clear-both\"></div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function Home() {\r\n  // Commented out unused variables that might be needed in future\r\n  const maxQtyGasAuthorized = 180000;\r\n  const maxPriceAuthorizeForOneGas = 10 ** 15;\r\n\r\n  const { address, account } = useAccount();\r\n  const { disconnect } = useDisconnect();\r\n  const { chain } = useNetwork();\r\n\r\n  // const { abi, vault } = useGetABI();\r\n  const [abi, setAbi] = useState<Abi | undefined>();\r\n  const [vault, setVault] = useState<Contract | null>(null);\r\n  const [token, setToken] = useState<Contract | null>(null);\r\n\r\n  useEffect(() => {\r\n    const fetchAbiAndContract = async () => {\r\n      if (!account) return;\r\n\r\n      const rpcProvider = new RpcProvider({\r\n        nodeUrl: \"https://starknet-sepolia.public.blastapi.io\",\r\n      });\r\n      const contractAddress =\r\n        \"0x05f0f718e8ae8356b800001104e840ba2384e413f5b1567b55dc457c044a75d9\";\r\n      const { abi: vaultAbi } = await rpcProvider.getClassAt(contractAddress);\r\n      if (!vaultAbi) return;\r\n      const vaultContract = new Contract(\r\n        vaultAbi,\r\n        contractAddress,\r\n        rpcProvider\r\n      );\r\n      vaultContract.connect(account);\r\n\r\n      setAbi(vaultAbi as Abi);\r\n      setVault(vaultContract);\r\n\r\n      const erc20_address =\r\n        \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\";\r\n      const { abi: tokenAbi } = await rpcProvider.getClassAt(erc20_address);\r\n      if (!tokenAbi) return;\r\n      const erc20 = new Contract(tokenAbi, erc20_address, rpcProvider);\r\n      erc20.connect(account);\r\n      setToken(erc20);\r\n    };\r\n\r\n    fetchAbiAndContract();\r\n  }, [account]);\r\n\r\n  const [amount, setAmount] = useState(\"1\");\r\n  const [recipient, setRecipient] = useState(\"\");\r\n  const [activeTab, setActiveTab] = useState(\"deposit\");\r\n  const [isLoadingDeposit, setIsLoadingDeposit] = useState(false);\r\n\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(address!);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    disconnect();\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    if (activeTab === \"deposit\") {\r\n      if (!address || !account) return;\r\n\r\n      if (!vault) {\r\n        console.error(\"Vault contract is not loaded yet.\");\r\n        return;\r\n      }\r\n\r\n      if (!token) {\r\n        console.error(\"Token contract is not loaded yet.\");\r\n        return;\r\n      }\r\n\r\n      setIsLoadingDeposit(true);\r\n\r\n      console.log(\"Vault: \", vault);\r\n      const rpcProvider = new RpcProvider({\r\n        nodeUrl: \"https://starknet-sepolia.public.blastapi.io\",\r\n      });\r\n\r\n      const balance = await vault.getBalance(\r\n        \"0x00d5944409b0e99d8671207c1a1f8db223a258f2effa29efdf2cbddf0a85d1b1\"\r\n      );\r\n      console.log(\"Balance: \", balance);\r\n      const rangeIndex = await vault.getRangeIndex();\r\n      console.log(\"range: \", rangeIndex);\r\n\r\n      const multiCall = await account.execute([\r\n        // Calling the first contract\r\n        {\r\n          contractAddress: \"0x04718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d\",\r\n          entrypoint: 'approve',\r\n          // approve 1 wei for bridge\r\n          calldata: CallData.compile({\r\n            spender: \"0x05f0f718e8ae8356b800001104e840ba2384e413f5b1567b55dc457c044a75d9\",\r\n            amount: cairo.uint256(amount),\r\n          }),\r\n        },\r\n        // Calling the second contract\r\n        {\r\n          contractAddress: \"0x05f0f718e8ae8356b800001104e840ba2384e413f5b1567b55dc457c044a75d9\",\r\n          entrypoint: 'deposit',\r\n          // transfer 1 wei to the contract address\r\n          calldata: CallData.compile({\r\n            amount: cairo.uint256(amount),\r\n          }),\r\n        },\r\n      ]);\r\n      await rpcProvider.waitForTransaction(multiCall.transaction_hash);\r\n      // const myCall1 = token.populate(\"approve\", [\r\n      //   \"0x05f0f718e8ae8356b800001104e840ba2384e413f5b1567b55dc457c044a75d9\",\r\n      //   amount,\r\n      // ]);\r\n\r\n      // const deposit = vault.populate(\"deposit\", [\r\n      //   \"0x05f0f718e8ae8356b800001104e840ba2384e413f5b1567b55dc457c044a75d9\",\r\n      //   amount,\r\n      // ]);\r\n      // const { transaction_hash: txH } = await account.execute(\r\n      //   [myCall1, deposit],\r\n      //   {\r\n      //     version: constants.TRANSACTION_VERSION.V3,\r\n      //     maxFee: 1e15,\r\n      //     tip: 1e13,\r\n      //     paymasterData: [],\r\n      //     resourceBounds: {\r\n      //       l1_gas: {\r\n      //         max_amount: num.toHex(maxQtyGasAuthorized),\r\n      //         max_price_per_unit: num.toHex(maxPriceAuthorizeForOneGas),\r\n      //       },\r\n      //       l2_gas: {\r\n      //         max_amount: num.toHex(0),\r\n      //         max_price_per_unit: num.toHex(0),\r\n      //       },\r\n      //     },\r\n      //   }\r\n      // );\r\n      // console.log(\"tx: \", txH);\r\n      // const txR = await rpcProvider.waitForTransaction(txH);\r\n      // if (txR.isSuccess()) {\r\n      //   console.log(\"Paid fee =\", txR.actual_fee);\r\n      //   console.log(\"events: \", txR.events);\r\n      // }\r\n\r\n\r\n\r\n      setIsLoadingDeposit(false);\r\n\r\n      //  call deposit\r\n    } else {\r\n      console.log(`Withdrawing ${amount} to ${recipient}`);\r\n    }\r\n  };\r\n\r\n  if (!address)\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <WalletConnectorModal />\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    <div className=\"min-h-screen  flex items-center justify-center p-4\">\r\n      <div className=\"bg-gray-50 rounded-3xl shadow-lg p-8 w-full max-w-md\">\r\n        {/* Header with address and buttons */}\r\n        <div className=\"flex items-center justify-between mb-8\">\r\n          <div className=\"flex-1\">\r\n            <span className=\"text-gray-600 text-sm\">address</span>\r\n            <div className=\"font-mono text-sm mt-1\">\r\n              {getShortAddress(address)}\r\n            </div>\r\n          </div>\r\n          <div className=\"flex gap-2 ml-4\">\r\n            <button\r\n              onClick={handleCopy}\r\n              className=\"p-2 border-2 border-gray-300 rounded-lg hover:bg-gray-50 hover:border-gray-400 hover:shadow-md transform hover:scale-105 transition-all duration-200 cursor-pointer\"\r\n              title=\"Copy address\"\r\n            >\r\n              <Link href={\"/fund\"}>Phase seed</Link>\r\n            </button>\r\n            <button\r\n              onClick={handleCopy}\r\n              className=\"p-2 border-2 border-gray-300 rounded-lg hover:bg-gray-50 hover:border-gray-400 hover:shadow-md transform hover:scale-105 transition-all duration-200 cursor-pointer\"\r\n              title=\"Copy address\"\r\n            >\r\n              <Copy size={16} />\r\n            </button>\r\n            <button\r\n              onClick={handleLogout}\r\n              className=\"p-2 border-2 border-gray-300 rounded-lg hover:bg-red-50 hover:border-red-300 hover:text-red-600 hover:shadow-md transform hover:scale-105 transition-all duration-200 cursor-pointer\"\r\n              title=\"Logout\"\r\n            >\r\n              <LogOut size={16} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"text-center mb-8\">\r\n          <Balance address={address} />\r\n        </div>\r\n\r\n        {/* Deposit/Withdraw Tabs */}\r\n        <div className=\"flex gap-2 mb-6\">\r\n          <button\r\n            onClick={() => setActiveTab(\"deposit\")}\r\n            className={`flex-1 py-3 px-6 rounded-xl font-medium transition-all duration-200 cursor-pointer transform hover:scale-105 hover:shadow-md ${activeTab === \"deposit\"\r\n                ? \"bg-red-500 text-white border-2 border-red-500 hover:bg-red-600 hover:border-red-600\"\r\n                : \"bg-white text-gray-700 border-2 border-gray-300 hover:bg-gray-50 hover:border-gray-400 hover:text-gray-800\"\r\n              }`}\r\n          >\r\n            Deposit\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab(\"withdraw\")}\r\n            className={`flex-1 py-3 px-6 rounded-xl font-medium transition-all duration-200 cursor-pointer transform hover:scale-105 hover:shadow-md ${activeTab === \"withdraw\"\r\n                ? \"bg-gray-800 text-white border-2 border-gray-800 hover:bg-gray-900 hover:border-gray-900\"\r\n                : \"bg-white text-gray-700 border-2 border-gray-300 hover:bg-gray-50 hover:border-gray-400 hover:text-gray-800\"\r\n              }`}\r\n          >\r\n            Withdraw\r\n          </button>\r\n        </div>\r\n\r\n        {activeTab === \"deposit\" ? (\r\n          <DepositForm\r\n            amount={amount}\r\n            setAmount={setAmount}\r\n            onConfirm={handleConfirm}\r\n            isLoading={isLoadingDeposit}\r\n          />\r\n        ) : (\r\n          <WithdrawForm\r\n            recipient={recipient}\r\n            setRecipient={setRecipient}\r\n            amount={amount}\r\n            setAmount={setAmount}\r\n            onConfirm={handleConfirm}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}